generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id             Int       @id @default(autoincrement())
  title          String    @db.VarChar(255)
  description    String?
  startDate      DateTime  @db.Timestamp(6)
  endDate        DateTime  @db.Timestamp(6)
  fullDay        Boolean
  authorId       String    @db.VarChar(255)
  participantIds String[]  @db.VarChar(255)
  locationId     Int?
  color          String?   @db.VarChar(7)
  User           User      @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Location       Location? @relation(fields: [locationId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Friendship {
  id          Int                @id @default(autoincrement())
  requesterId String             @db.VarChar(255)
  recipientId String             @db.VarChar(255)
  status      friendshipStatuses
  recipient   User               @relation("Friendship_recipientIdToUser", fields: [recipientId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  requester   User               @relation("Friendship_requesterIdToUser", fields: [requesterId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Location {
  id       Int     @id @default(autoincrement())
  name     String  @db.VarChar(255)
  lat      Float
  lon      Float
  authorId String  @db.VarChar(255)
  User     User    @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Event    Event[]
}

model User {
  id                                      String        @id @db.VarChar(255)
  username                                String        @unique @db.VarChar(255)
  email                                   String        @unique @db.VarChar(255)
  firstName                               String        @db.VarChar(255)
  lastName                                String        @db.VarChar(255)
  birthday                                DateTime?     @db.Date
  role                                    roles
  gender                                  genders
  authProvider                            authProviders
  loggedAt                                DateTime      @default(now()) @db.Timestamp(6)
  createdAt                               DateTime      @default(now()) @db.Timestamp(6)
  Event                                   Event[]
  Friendship_Friendship_recipientIdToUser Friendship[]  @relation("Friendship_recipientIdToUser")
  Friendship_Friendship_requesterIdToUser Friendship[]  @relation("Friendship_requesterIdToUser")
  Location                                Location[]
}

enum genders {
  male
  female
  unknown
}

enum roles {
  basic
  plus
  ultimate
}

enum authProviders {
  google
  facebook
  vanilla
  apple
}

enum friendshipStatuses {
  accepted
  pending
}
